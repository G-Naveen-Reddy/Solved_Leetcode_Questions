OPTIMIZED APPROACH : USING SLIDING WINDOW TECHNIQUE
TIME COMPLEXITY : O(N)
SPACE COMPLEXITY : O(1)

class Solution {
    public int numOfSubarrays(int[] arr, int k, int t) {
        int n=arr.length,sum=0,c=0;
        for(int i=0;i<k;i++)
        {
            sum+=arr[i];
        }
        if(sum/k>=t) c++;
        for(int j=k;j<n;j++)
        {
            sum=sum+arr[j]-arr[j-k];
            if(sum/k>=t) c++;
        }
        return c;
    }
}

BRUTE FORCE APPROACH :
TIME COMPLEXITY : O(N^2)
SPACE COMPLEXITY : O(1) 
