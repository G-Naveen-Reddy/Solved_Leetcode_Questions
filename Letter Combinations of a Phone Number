BEST APPROACH : BEATS 100%  AND 0 ms

class Solution {
    private static final String[] KEYPAD = { "",    "",    "abc",  "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
    public List<String> letterCombinations(String digits)
    {
        ArrayList<String> ans = new ArrayList<>();
        if (digits.length() == 0) {
            return ans;
        }
        backtrack(ans, digits, 0, new StringBuilder());
        return ans;
    }
   private void backtrack(List<String> ans, String digits, int index, StringBuilder current) {
        if (index == digits.length()) {
            ans.add(current.toString());
            return;
        }
        String key = KEYPAD[digits.charAt(index) - '0'];
        for (int i = 0; i < key.length(); i++) {
            current.append(key.charAt(i));
            backtrack(ans, digits, index + 1, current);
            current.deleteCharAt(current.length() - 1);
        }
    }
}
