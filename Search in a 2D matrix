1. Brute force APPROACH : 
steps : Traversing through each element in a matrix to get the target element 
TIME COMPLEXITY : O (M * N) 
                   where M = No of ROWS
                         N = No of COLS


2. OPTIMISED APPROACH : 
NOTE : IN Question it is mentioned that all elements in each row are sorted in ascending order
     So we can use a part of "Binary Search Logic" 
TIME COMPLEXITY : O(M + N)
 where M = No of ROWS
      N = No of COLS

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int rows=matrix.length;
        int cols=matrix[0].length;
        int row=0,col=cols-1;
        while(row<rows&&col>=0)
        {
            if(matrix[row][col]==target)
              return true;
            else if(matrix[row][col]>target)
              col--;
            else
              row++;
        }
        return false;
    }
}
