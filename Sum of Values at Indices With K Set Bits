Input: nums = [5,10,1,5,2], k = 1
Output: 13
Explanation: The binary representation of the indices are: 
0 = 0002
1 = 0012
2 = 0102
3 = 0112
4 = 1002 
Indices 1, 2, and 4 have k = 1 set bits in their binary representation.
Hence, the answer is nums[1] + nums[2] + nums[4] = 13.

1. Using Built-in Function : Integer.bitCount()
class Solution {
    public int sumIndicesWithKSetBits(List<Integer> nums, int k) {
        int sum=0;
      for(int i=0;i<nums.size();i++)
      {
        if(Integer.bitCount(i)==k)
        {
            sum+=nums.get(i);
        }
      }
      return sum;   
    }
}

without using built-in Function:
class Solution {
    public static int count(int n)
    {
        int c=0;
        while(n>0)
        {
            n=n&(n-1);
            c++;
        }
        return c;
    }
    public int sumIndicesWithKSetBits(List<Integer> nums, int k) {
        int sum=0;
      for(int i=0;i<nums.size();i++)
      {
        if(count(i)==k)
        {
            sum+=nums.get(i);
        }
      }
      return sum;   
    }
}
