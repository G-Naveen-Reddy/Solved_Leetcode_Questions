Reverse LinkedList II

class Solution {
    public void reverse(ListNode head)
    {
        ListNode curr=head,prev=null,Next=null;
        while(curr!=null)
        {
            Next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=Next;
        }
    }
    public ListNode reverseBetween(ListNode head, int left, int right) {
      ListNode temp=head,a=null,b=null,c=null,d=null;
      int pos=1;
      while(temp!=null)
      {
        if(pos==left-1) a=temp;
        if(pos==left) b=temp;
        if(pos==right) c=temp;
        if(pos==right+1) d=temp;
        pos++;
        temp=temp.next;
      }
      if(a!=null) a.next=null;
      if(c!=null) c.next=null;
      reverse(b);
      if(a!=null) a.next=c;
      b.next=d;
      if(a==null) return c;
      return head;   
    }
}

 Reverse LinkedList I

class Solution {
    public ListNode reverseList(ListNode head) {
        if(head==null) return null;
        ListNode curr=head,prev=null,Next=null;
        while(curr!=null)
        {
            Next=curr.next;
            curr.next=prev;
            prev=curr;
            curr=Next;
        }
        return prev;
    }
}
