Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array.
Example 1:
Input: nums = [3,0,1]
Output: 2
Explanation:
n = 3 since there are 3 numbers, so all numbers are in the range [0,3]. 2 is the missing number in the range since it does not appear in nums

1. Optimzed Approach : O(N), Subtract (Actual_Sum)-(Array_Sum)
class Solution {
    public int missingNumber(int[] nums) {
        int n=nums.length,nums_sum=0;
        int actual_sum=(n*(n+1))/2;
        for(int i=0;i<n;i++)
        {
            nums_sum+=nums[i];
        }
        return actual_sum-nums_sum;
    }
}

2. Optimzed Approach : O(N), XOR (Actual_Xor) ^ (Array_Xor)
class Solution {
    public int missingNumber(int[] nums) {
        int res=0,result=0;
        for(int i=0;i<=nums.length;i++)
        {
            res^=i;
        }
        for(int i=0;i<nums.length;i++)
        {
            result^=nums[i];
        }
        return res ^ result;
   }
}
