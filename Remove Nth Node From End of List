class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head==null || head.next==null) return null;
      ListNode dummy=new ListNode(-1);
      dummy.next=head;
      ListNode slow=dummy, fast=dummy;
      for(int i=0;i<=n;i++)
      {
        fast=fast.next;
      }
      while(fast!=null)
      {
        slow=slow.next;
        fast=fast.next;
      }
      slow.next=slow.next.next;
      return dummy.next;
    }
}

class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head==null || head.next==null) return null;
        ListNode temp=head,slow=head;
        int len=0;
        while(temp!=null)
        {
            len++;
            temp=temp.next;
        }
        if(len==n) return head.next;
        int req=len-n;
        int start=1;
        while(start<req)
        {
            slow=slow.next;
            start++;
        }
        slow.next=slow.next.next;
        return head;
    }
}
