LOWEST COMMON ANCESTOR
Input: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1
Output: 3
Explanation: The LCA of nodes 5 and 1 is 3

class Solution {
    public boolean exists(TreeNode root,TreeNode node)
    {
       if(root==null) return false;
       if(root==node) return true;
       return exists(root.left,node) || exists(root.right,node);
    }
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        if(p==root || q==root) return root;
        boolean leftExists=exists(root.left,p);
        boolean rightExists=exists(root.left,q);
        if(leftExists==true && rightExists==true) return lowestCommonAncestor(root.left,p,q);
        if(leftExists==false && rightExists==false) return lowestCommonAncestor(root.right,p,q);
        else return root;
    }
}
