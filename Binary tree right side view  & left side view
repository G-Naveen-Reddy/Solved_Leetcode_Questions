Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.
Example 1:
Input: root = [1,2,3,null,5,null,4]

Output: [1,3,4]

class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        ArrayList<Integer> ans=new ArrayList<>();
        rightView(root,0,ans);
        return ans;        
    }
    public void rightView(TreeNode root, int level, ArrayList<Integer> ans)
    {
        if(root==null) return;
        if(level==ans.size()) ans.add(root.val);
        rightView(root.right,level+1,ans);
        rightView(root.left,level+1,ans);
    }
}

leftSide View
example : 
input : root = [1,2,3,4,null,null,null,5]

output = [1,2,4,5]
class Solution {
    public List<Integer> leftSideView(TreeNode root) {
        ArrayList<Integer> ans=new ArrayList<>();
        leftView(root,0,ans);
        return ans;        
    }
public void leftView(TreeNode root, int level, ArrayList<Integer> ans)
     {
      if(root==null) return;
      if(level==ans.size()) ans.add(root.val);
      leftView(root.left,level+1,ans);
      leftView(root.right,level+1,ans);
    }
}


