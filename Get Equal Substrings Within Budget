OPTIMIZED APPROACH : 
class Solution {
    public int equalSubstring(String s, String t, int maxCost) {
        int left=0, right=0, cost=0, maxLength=0;
        while(right<s.length())
        {
            cost+=Math.abs(s.charAt(right)-t.charAt(right));
            while(cost>maxCost)
            {
                cost-=Math.abs(s.charAt(left)-t.charAt(left));
                left++;
            }
            maxLength=Math.max(maxLength,right-left+1);
            right++;
        }
        return maxLength;
    }
}


BRUTE FORCE APPROACH : 
class Solution {
    public int equalSubstring(String s, String t, int maxCost) {
        int maxLength=0;
        for(int i=0;i<s.length();i++)
        {
            int cost=0;
            for(int j=0;j<s.length();j++)
            {
                cost+=Math.abs(s.charAt(j)-t.charAt(j));
                if(cost>maxCost)
                {
                    break;
                }
                maxLength=Math.max(maxLength, j-i+1);
            }
        }
        return maxLength;
    }
}
