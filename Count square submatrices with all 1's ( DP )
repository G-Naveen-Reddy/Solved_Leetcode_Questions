METHOD-1
class Solution {
    public int countSquares(int[][] matrix) {
        int m=matrix.length, n=matrix[0].length,count=0;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(matrix[i][j]==0) continue;
                if(i>0 && j>0) 
                { 
                    matrix[i][j]+=min(matrix[i-1][j],matrix[i][j-1],matrix[i-1][j-1]);
                }
                count+=matrix[i][j];
            }
        }
        return count;
    }
    public static int min(int a,int b,int c)
    {
        return Math.min(a,Math.min(b,c));
    }
}
Method 2:
class Solution {
    public int countSquares(int[][] matrix) {
        int m=matrix.length, n=matrix[0].length;
        int dp[][]=new int[m][n];
        for(int i=0;i<m;i++)  //1st column count
        {
            dp[i][0]=matrix[i][0];
           
        }
        for(int j=0;j<n;j++)  //1st row count
        {
            dp[0][j]=matrix[0][j];
        }
        for(int i=1;i<m;i++)   
        {
            for(int j=1;j<n;j++)
            {
                if(matrix[i][j]==1) 
                { 
                    dp[i][j]=min(dp[i-1][j],dp[i][j-1],dp[i-1][j-1])+1;                    
                }
            }
        } 
        int sum=0;
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                sum+=dp[i][j];
            }
        }
        return sum;
    }
    public static int min(int a,int b,int c)
    {
        return Math.min(a,Math.min(b,c));
    }
}


METHOD:3
class Solution {
    public int countSquares(int[][] matrix) {
        int m=matrix.length, n=matrix[0].length,count=0;
        int dp[][]=new int[m][n];
        for(int i=0;i<m;i++)  //1st column count
        {
            dp[i][0]=matrix[i][0];
            count+=dp[i][0];
        }
        for(int j=1;j<n;j++)  //1st row count
        {
            dp[0][j]=matrix[0][j];
            count+=dp[0][j];
        }
        for(int i=1;i<m;i++)   
        {
            for(int j=1;j<n;j++)
            {
                if(matrix[i][j]==1) 
                { 
                    matrix[i][j]+=min(matrix[i-1][j],matrix[i][j-1],matrix[i-1][j-1]);
                    count+=matrix[i][j];
                }
            }
        } 
        return count;
    }
    public static int min(int a,int b,int c)
    {
        return Math.min(a,Math.min(b,c));
    }
}


