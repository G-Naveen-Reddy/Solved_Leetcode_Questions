NOTE : this problem should be solved without using division operator
this problem involves use of PrefixSum and Array

class Solution {
    public int[] productExceptSelf(int[] nums) {
        int n=nums.length;
        int pref[]=new int[n];
        pref[0]=1;
        for(int i=1;i<n;i++)
        {
            pref[i]=pref[i-1]*nums[i-1];
        }
        int suf[]=new int[n];
        suf[n-1]=1;
        for(int i=n-2;i>=0;i--)
        {
            suf[i]=suf[i+1]*nums[i+1];
        }
        int ans[]=new int[n];
        for(int i=0;i<n;i++)
        {
            ans[i]=pref[i]*suf[i];
        }
        return ans;
    }
}


another approach using only one additonal array would be like this :

class Solution {
    public int[] productExceptSelf(int[] nums) {
        int n=nums.length;
        int pref[]=new int[n];
        pref[0]=1;
        for(int i=1;i<n;i++)
        {
            pref[i]=pref[i-1]*nums[i-1];
        }
        int suf=1;
        for(int i=n-2;i>=0;i--)
        {
            suf*=nums[i+1];
            pref[i]*=suf;
        }
        return pref;
    }
}
